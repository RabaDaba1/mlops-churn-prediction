name: Continuous Training Pipeline

on:
  push:
    branches:
      - main

jobs:
  run-pipeline:
    runs-on: ubuntu-latest
    container: ghcr.io/astral-sh/uv:0.7.6-python3.11
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: uv sync --dev

      - name: Configure DVC
        run: |
          dvc remote add -d b2remote s3://customer-churn-prediction/dvc
          dvc remote modify b2remote endpointurl https://s3.eu-central-003.backblazeb2.com
          dvc remote modify b2remote access_key_id ${{ secrets.B2_ACCESS_KEY_ID }}
          dvc remote modify b2remote secret_access_key ${{ secrets.B2_SECRET_ACCESS_KEY }}

      - name: Authenticate W&B
        run: wandb login ${{ secrets.WANDB_API_KEY }}

      - name: Setup Kaggle API credentials
        run: |
          mkdir -p ~/.kaggle
          echo '${{ secrets.KAGGLE_JSON }}' > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Pull DVC cache
        run: dvc pull -r b2remote

      - name: Reproduce DVC pipeline
        env:
          WANDB_PROJECT: ${{ vars.WANDB_PROJECT }}
          WANDB_ENTITY: ${{ secrets.WANDB_ENTITY }}
        run: dvc repro

      - name: Push DVC cache
        run: dvc push -r b2remote

      - name: Commit and push dvc.lock
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add dvc.lock
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update dvc.lock [skip ci]"
            git push
          fi
